---
title: "1000 Genomes - Sample information"
editor_options: 
  chunk_output_type: console
---


```{r}
library(reticulate)
#py_install("pandas")
#py_install("polars")
#py_install("seaborn")
```

```{python, echo = F}
#import polars as pl
import pandas as pd
import numpy as np
from great_tables import GT, md, html, style, loc
```



```{python, echo = F}
dist_mat_pd = pd.read_csv("dist_mat_final.csv")
#dist_mat_pl = pl.read_csv("dist_mat_final.csv")
```



```{python, echo = F}
# Define groups for spanners
## AND select anything to be excluded
africa_AFR    = ['ACB',
                 #'ASW','ESN',
                 'GWD','LWK',
                 #'MSL',
                 'YRI'
                 ]
americas_AMR  = ['CLM',
                'MXL','PEL','PUR']
east_asia_EAS = ['CDX',
                #'CHB',
                'CHS',
                'JPT','KHV']
europe_EUR    = [#'CEU',
                'FIN','GBR','IBS',
                 'TSI'
                ]
southasia_SAS = [#'BEB',
               'GIH',
                'ITU','PJL','STU']
                
# combine into single list                
numeric_cols = africa_AFR+americas_AMR+east_asia_EAS+europe_EUR+southasia_SAS

```

```{python, echo = F}
# columns with meta data
meta_cols = ['sup_pop', 'oneKG_pop', 'location', 'pop_details', 'ethnic_cultural_group',
       'sup_pop_alt', 'icon']
       
# all columns used
cols_use = numeric_cols+meta_cols

# rows used
rows_use = dist_mat_pd.oneKG_pop.isin(numeric_cols)
```

## Basic Table

The basic table looks like this:
```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
)
```

## Heat map with numeric values

The basic table looks like this:
```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
)
```

I can remove columns I don't want with `.cols_hide()`

```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
  
      # remove columns
      .cols_hide(columns=[
      #"location", # previously "country"
      "pop_details",
      "sup_pop",
      "sup_pop_alt"])
)
```

Set a header with `.tab_header()`

```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
      #header
      .tab_header(title="Genetic distance between 1000 Genomes populations",
                 subtitle="Subtitle goes here"
                  )
  
      # remove columns
      .cols_hide(columns=[
                #"location", # previously "country"
                "pop_details",
                "sup_pop",
                "sup_pop_alt"]
                )
)
```


Render images in the column

```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
      #header
      .tab_header(title="Genetic distance between 1000 Genomes populations",
                 subtitle="Subtitle goes here"
                  )
  
      # remove columns
      .cols_hide(columns=[
                #"location", # previously "country"
                "pop_details",
                "sup_pop",
                "sup_pop_alt"]
                )
      .fmt_image("icon", path="icons/")
)
```


Spanner over a group of columns
```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
      #header
      .tab_header(title="Genetic distance between 1000 Genomes populations",
                 subtitle="Subtitle goes here"
                  )
  
      # remove columns
      .cols_hide(columns=[
                #"location", # previously "country"
                "pop_details",
                "sup_pop",
                "sup_pop_alt"]
                )
      
      # format images
      .fmt_image("icon", path="icons/")
      
      # add a spanner over meta-data
      .tab_spanner(
                  label="Group",
                  columns=[
                          #"sup_pop", 
                          "location",
                          "oneKG_pop",
                          "icon"
                          ]
                  )
)
```

Move set of columns to left
```{python}
(
  GT(dist_mat_pd.loc[0:10,cols_use])
      #header
      .tab_header(title="Genetic distance between 1000 Genomes populations",
                 subtitle="Subtitle goes here"
                  )
  
      # remove columns
      .cols_hide(columns=[
                #"location", # previously "country"
                "pop_details",
                "sup_pop",
                "sup_pop_alt"]
                )
      
      # format images
      .fmt_image("icon", path="icons/")
      
      # add a spanner over meta-data
      .tab_spanner(
                  label="Group",
                  columns=[
                          #"sup_pop", 
                          "location",
                          "oneKG_pop",
                          "icon"
                          ]
                  )
      .cols_move_to_start(columns=[#"sup_pop", 
                                   "location",
                                    "oneKG_pop",
                                    "icon"
                                  ]
                          )
)
```










```{python, eval = T}
# make my table
(
    GT(dist_mat_pd.loc[rows_use,cols_use]).tab_style(
        style=style.text(size = "0"),
        locations=loc.body(columns=numeric_cols)
    )
    .tab_header(title="Genetic distance between 1000 Genomes populations",
     subtitle="Subtitle goes here"
     )
    .cols_hide(columns=[
      #"location", # previously "country"
      "pop_details",
      "sup_pop",
      "sup_pop_alt"])
    .fmt_image("icon", path="icons/")
    #.tab_stub(
    #  rowname_col="oneKG_pop", 
    #  groupname_col="sup_pop"
    #)
    .tab_spanner(
        label="Group",
        columns=[
                #"sup_pop", 
                "location",
                "oneKG_pop",
                "icon"
                ]
    )
    .tab_spanner(
        label="Africa",
        columns=africa_AFR
    )
    .tab_spanner(
        label="Americas",
        columns=americas_AMR
    )
    .tab_spanner(
        label="East Asia",
        columns=east_asia_EAS
    )
    .tab_spanner(
        label="Western Europe",
        columns=europe_EUR
    )
    .tab_spanner(
        label="South Asia",
        columns=southasia_SAS
    )
    .tab_spanner(
        label="Genetic Distances",
        columns=numeric_cols
    )
    .tab_spanner(
        label="Notes",
        columns=[
                 "ethnic_cultural_group"#,
                 #"country_sampling"
                 ]
    )
    .cols_move_to_start(columns=[#"sup_pop", 
                                "location",
                                 "oneKG_pop",
                                "icon"
                                ])

    .cols_label(
        #sup_pop = "Super population",
        oneKG_pop = "Population Code",
        location = "Location",
        #country_sampling = "Sampling location",
        ethnic_cultural_group = "Ethnic/Cultural Group",
        icon = "Geography"
    )
    .cols_align(align="center")
    .fmt_number(columns=numeric_cols, decimals=0, use_seps=False)
    #.sub_zero(zero_text='nil')
    .data_color(
        domain=[90, 0],
        palette=["white", "orange"],
        na_color="white",
    )
    .tab_source_note(source_note="Add citation")

)
```

