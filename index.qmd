---
title: "1000 Genomes - Sample information"
editor_options: 
  chunk_output_type: console
---


```{r, echo = F, warning = F, message = F}
library(reticulate)
#py_install("pandas")
#py_install("polars")
#py_install("seaborn")
```

```{python, echo = F, warning = F, message = F}
import polars as pl
import pandas as pd
import numpy as np
from great_tables import GT, md, html, style, loc
```



```{python,echo = F, warning = F, message = F}
import pandas as pd
import polars as pl
dist_mat_pd = pd.read_csv("dist_mat_final.csv")
dist_mat_pl = pl.read_csv("dist_mat_final.csv")
```



```{python, echo = F}
# use 3 populations per general region
pops_use = [# African populations
            #'ACB',
            #'ASW', 'ESN', 
            'GWD', 'LWK', 
            #'MSL', 
            'YRI',
            
            # Americas
            #'CLM', 
            'MXL', 'PEL', 'PUR', 
            
            'CDX', 
            #'CHB', 
            #'CHS', 
            'JPT', 'KHV',
            
            #'CEU',
            'FIN','GBR','IBS',
            #'TSI', 
            
            #'BEB', 
            #'GIH', 
            'ITU',
            'PJL', 'STU']
```


```{python}
# columns that will be numeric in table
num_cols = ['ACB',
            #'ASW', 'ESN', 
            'GWD', 'LWK', 
            #'MSL', 
            'YRI',
            #'CLM', 
            'MXL', 'PEL', 'PUR',
            'CDX', 
            #'CHB', 'CHS', 
            'JPT', 'KHV',
            #'CEU',
            'FIN','GBR','IBS',
            #'TSI', 
            #'BEB', 'GIH',
             'ITU', 'PJL', 'STU']

# super population groups
## for creating spanners in table
africa_AFR    = ['ACB','ASW','ESN','GWD','LWK','MSL','YRI']
americas_AMR  = ['CLM','MXL','PEL','PUR']
east_asia_EAS = ['CDX','CHB','CHS','JPT','KHV']
europe_EUR    = ['CEU','FIN','GBR','IBS','TSI']
southasia_SAS = ['BEB','GIH','ITU','PJL','STU']
```


```{python}
africa_AFR    = ['ACB',
                 #'ASW','ESN',
                 'GWD','LWK',
                 #'MSL',
                 #''YRI'
                 ]
americas_AMR  = [#'CLM',
                'MXL','PEL','PUR']
east_asia_EAS = ['CDX',
                #'CHB','CHS',
                'JPT','KHV']
europe_EUR    = [#'CEU',
                'FIN','GBR','IBS'#,
                #'TSI'
                ]
southasia_SAS = [#'BEB','GIH',
                'ITU','PJL','STU']
                
numeric_cols = africa_AFR+americas_AMR+east_asia_EAS+europe_EUR+southasia_SAS

```

```{python}
meta_cols = ['sup_pop', 'oneKG_pop', 'country/Location', 'pop_details', 'ethnic_cultural_group',
       'sup_pop_alt', 'icon']
```


```{python}
cols_use = numeric_cols+meta_cols
```

```{python}
rows_use = dist_mat_pd.oneKG_pop.isin(numeric_cols)
```

```{python, eval = T}
from great_tables import GT, md, html, style, loc
# make my table
(
    GT(dist_mat_pd.loc[rows_use,cols_use]).tab_style(
        style=style.text(size = "0"),
        locations=loc.body(columns=num_cols)
    )
    .tab_header(title="Genetic distance between 1000 Genomes populations",
     subtitle="Subtitle goes here"
     )
    .cols_hide(columns=[
      "country/Location", # previously "country"
      "pop_details",
      "sup_pop",
      "sup_pop_alt"])
    .fmt_image("icon", path="icons/")
    #.tab_stub(
    #  rowname_col="row", 
    #  groupname_col="sup_pop"
    #)
    .tab_spanner(
        label="Group",
        columns=[
                #"sup_pop", 
                "oneKG_pop",
                "icon"
                ]
    )
    .tab_spanner(
        label="Africa",
        columns=africa_AFR
    )
    .tab_spanner(
        label="Americas",
        columns=americas_AMR
    )
    .tab_spanner(
        label="East Asia",
        columns=east_asia_EAS
    )
    .tab_spanner(
        label="Western Europe",
        columns=europe_EUR
    )
    .tab_spanner(
        label="South Asia",
        columns=southasia_SAS
    )
    .tab_spanner(
        label="Genetic Distances",
        columns=num_cols
    )
    .tab_spanner(
        label="Notes",
        columns=[
                 "ethnic_cultural_group"#,
                 #"country_sampling"
                 ]
    )
    .cols_label(
        #sup_pop = "Super population",
        oneKG_pop = "1KG Population Code",
        #country_sampling = "Sampling location",
        ethnic_cultural_group = "Ethnic / Cultural Group",
        icon = "Geographic Origin"
    )
    .cols_align(align="center")
    .fmt_number(columns=num_cols, decimals=0, use_seps=False)
    #.sub_zero(zero_text='nil')
    .data_color(
        domain=[90, 0],
        palette=["white", "orange"],
        na_color="white",
    )
    .tab_source_note(source_note="Add citation")
    .cols_move_to_start(columns=[#"sup_pop", 
      "icon",
                                "pop"])

)
```

